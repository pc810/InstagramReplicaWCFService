//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InstagramApplication.UFInstaSR {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UFInstaSR.IuserfollowService")]
    public interface IuserfollowService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IuserfollowService/followUser", ReplyAction="http://tempuri.org/IuserfollowService/followUserResponse")]
        void followUser(int userId1, int userId2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IuserfollowService/followUser", ReplyAction="http://tempuri.org/IuserfollowService/followUserResponse")]
        System.Threading.Tasks.Task followUserAsync(int userId1, int userId2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IuserfollowService/unfollowUser", ReplyAction="http://tempuri.org/IuserfollowService/unfollowUserResponse")]
        void unfollowUser(int userId1, int userId2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IuserfollowService/unfollowUser", ReplyAction="http://tempuri.org/IuserfollowService/unfollowUserResponse")]
        System.Threading.Tasks.Task unfollowUserAsync(int userId1, int userId2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IuserfollowService/getFollowerList", ReplyAction="http://tempuri.org/IuserfollowService/getFollowerListResponse")]
        int[] getFollowerList(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IuserfollowService/getFollowerList", ReplyAction="http://tempuri.org/IuserfollowService/getFollowerListResponse")]
        System.Threading.Tasks.Task<int[]> getFollowerListAsync(int userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IuserfollowServiceChannel : InstagramApplication.UFInstaSR.IuserfollowService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IuserfollowServiceClient : System.ServiceModel.ClientBase<InstagramApplication.UFInstaSR.IuserfollowService>, InstagramApplication.UFInstaSR.IuserfollowService {
        
        public IuserfollowServiceClient() {
        }
        
        public IuserfollowServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IuserfollowServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IuserfollowServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IuserfollowServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void followUser(int userId1, int userId2) {
            base.Channel.followUser(userId1, userId2);
        }
        
        public System.Threading.Tasks.Task followUserAsync(int userId1, int userId2) {
            return base.Channel.followUserAsync(userId1, userId2);
        }
        
        public void unfollowUser(int userId1, int userId2) {
            base.Channel.unfollowUser(userId1, userId2);
        }
        
        public System.Threading.Tasks.Task unfollowUserAsync(int userId1, int userId2) {
            return base.Channel.unfollowUserAsync(userId1, userId2);
        }
        
        public int[] getFollowerList(int userId) {
            return base.Channel.getFollowerList(userId);
        }
        
        public System.Threading.Tasks.Task<int[]> getFollowerListAsync(int userId) {
            return base.Channel.getFollowerListAsync(userId);
        }
    }
}
