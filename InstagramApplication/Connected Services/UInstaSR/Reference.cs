//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InstagramApplication.UInstaSR {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/InstagramReplicaService")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime creation_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime creation_date {
            get {
                return this.creation_dateField;
            }
            set {
                if ((this.creation_dateField.Equals(value) != true)) {
                    this.creation_dateField = value;
                    this.RaisePropertyChanged("creation_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dob {
            get {
                return this.dobField;
            }
            set {
                if ((this.dobField.Equals(value) != true)) {
                    this.dobField = value;
                    this.RaisePropertyChanged("dob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                if ((this.userIdField.Equals(value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UInstaSR.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateUser", ReplyAction="http://tempuri.org/IUserService/CreateUserResponse")]
        void CreateUser(InstagramApplication.UInstaSR.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateUser", ReplyAction="http://tempuri.org/IUserService/CreateUserResponse")]
        System.Threading.Tasks.Task CreateUserAsync(InstagramApplication.UInstaSR.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUser", ReplyAction="http://tempuri.org/IUserService/getUserResponse")]
        InstagramApplication.UInstaSR.User getUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUser", ReplyAction="http://tempuri.org/IUserService/getUserResponse")]
        System.Threading.Tasks.Task<InstagramApplication.UInstaSR.User> getUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUserByEmail", ReplyAction="http://tempuri.org/IUserService/getUserByEmailResponse")]
        InstagramApplication.UInstaSR.User getUserByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUserByEmail", ReplyAction="http://tempuri.org/IUserService/getUserByEmailResponse")]
        System.Threading.Tasks.Task<InstagramApplication.UInstaSR.User> getUserByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUserId", ReplyAction="http://tempuri.org/IUserService/getUserIdResponse")]
        int getUserId(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUserId", ReplyAction="http://tempuri.org/IUserService/getUserIdResponse")]
        System.Threading.Tasks.Task<int> getUserIdAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUser", ReplyAction="http://tempuri.org/IUserService/DeleteUserResponse")]
        void DeleteUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUser", ReplyAction="http://tempuri.org/IUserService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        void UpdateUser(InstagramApplication.UInstaSR.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(InstagramApplication.UInstaSR.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUserWith", ReplyAction="http://tempuri.org/IUserService/getUserWithResponse")]
        InstagramApplication.UInstaSR.User[] getUserWith(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUserWith", ReplyAction="http://tempuri.org/IUserService/getUserWithResponse")]
        System.Threading.Tasks.Task<InstagramApplication.UInstaSR.User[]> getUserWithAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : InstagramApplication.UInstaSR.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<InstagramApplication.UInstaSR.IUserService>, InstagramApplication.UInstaSR.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateUser(InstagramApplication.UInstaSR.User user) {
            base.Channel.CreateUser(user);
        }
        
        public System.Threading.Tasks.Task CreateUserAsync(InstagramApplication.UInstaSR.User user) {
            return base.Channel.CreateUserAsync(user);
        }
        
        public InstagramApplication.UInstaSR.User getUser(int userId) {
            return base.Channel.getUser(userId);
        }
        
        public System.Threading.Tasks.Task<InstagramApplication.UInstaSR.User> getUserAsync(int userId) {
            return base.Channel.getUserAsync(userId);
        }
        
        public InstagramApplication.UInstaSR.User getUserByEmail(string email) {
            return base.Channel.getUserByEmail(email);
        }
        
        public System.Threading.Tasks.Task<InstagramApplication.UInstaSR.User> getUserByEmailAsync(string email) {
            return base.Channel.getUserByEmailAsync(email);
        }
        
        public int getUserId(string email) {
            return base.Channel.getUserId(email);
        }
        
        public System.Threading.Tasks.Task<int> getUserIdAsync(string email) {
            return base.Channel.getUserIdAsync(email);
        }
        
        public void DeleteUser(int userId) {
            base.Channel.DeleteUser(userId);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(int userId) {
            return base.Channel.DeleteUserAsync(userId);
        }
        
        public void UpdateUser(InstagramApplication.UInstaSR.User user) {
            base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(InstagramApplication.UInstaSR.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public InstagramApplication.UInstaSR.User[] getUserWith(string username) {
            return base.Channel.getUserWith(username);
        }
        
        public System.Threading.Tasks.Task<InstagramApplication.UInstaSR.User[]> getUserWithAsync(string username) {
            return base.Channel.getUserWithAsync(username);
        }
    }
}
